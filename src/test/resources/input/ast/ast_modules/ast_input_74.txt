module Algo2 {
     eq = lambda(x, y) => { x == y; };
     ff = lambda(n) => {
            [gen [gen eq(x, y) for y in [1..n] end] for x in [1..n] end];
     };

     E2 = ff(4);

     f1 = lambda(n) => {
          top1: n = n + 1;
          if(n < 4)
            goto top1;
          n;
     };

     f2 = lambda(n) => {
        top1: n = n * n;
        if(n < 10)
            goto top1;
        n;
     };

     f1 = lambda(n) => {
        top1: n = n * n * n;
        if(n < 100)
            goto top1;
        n;
     };

     c1 = f1(4); // 64 * 64 * 64
     c2 = f2(2); //16
}