{
  "terms": {
    "+": "+",
    "-": "-",
    "*": "*",
    "/": "/",
    "%": "%",
    "^": "^",
    "(": "(",
    ")": ")",
    "{": "{",
    "}": "}",
    "[": "[",
    "]": "]",
    "<": "<",
    "<=": "<=",
    ">": ">",
    ">=": ">=",
    "==": "==",
    "<>": "<>",
    "=": "=",
    "=>": "=>",
    ";": ";",
    "&&" : "&&",
    "||" : "@|@|",
    "->": "->",
    "rankdel": "..",
    "#": "#",
    ",": ",",
    "/*": "/@*",
    "//": "//",
    "id": "[A-Za-z@_]([A-Za-z@_0-9]+|empty)",
    "nonZeroNum": "[1-9]",
    "zero": "0",
    "nums": "([@_]*[0-9]+)",
    "num": ["(", "nonZeroNum", "nums", "*", ")", "|", "zero"],
    "signedNum": ["(", "(-|empty)", "num", ")"],
    "realNum": ["signedNum", ".", "[0-9]", "nums", "*", "(((E|e)", "signedNum", ")|empty)"],
    "ch": "\'_\'",
    "str": "\"_*\"",
    "empty": null
  },
  "keywords": [
    "true","false", "not", "lambda", "if", "else", "while", "pass"
  ],
  "separators": {
    "signedNum": "_",
    "realNum": "_"
  },

  "productions": [
    {"P": ["{", "SL", "}",
      {"act": "astNode", "value": "prog", "type": "program", "children": "all"},
      {"act": "astNode", "value": "prog", "type": "start", "child": "$0"}
    ]},
    {"SL": ["SL", "S"]}, {"SL": "S"},
    {"S": ["OP", ";"]}, {"S": ["P"]},

    {"S": ["if","(","B",")","S", "ELS",
      {"act": "astNode", "value": "$0", "type": "if", "children": "$2"}
    ]},

    {"ELS": ["else", "S",
      {"act": "astNode", "value": "$0", "type": "else", "children": "$0"}
    ]},

    {"ELS": ["empty",
      {"act": "astNode", "type": "else", "value": "pass"}
    ]},
    {"S": ["while", "(","B",")","S",
      {"act": "astNode", "value": "$0", "type": "loop", "children": "$1"}
    ]},

    {"OP": "A"},
    {"OP": "EXP"},
    {"A": ["id", "ACLIST", "=", "EXP",
      {"act": "astNode", "value": "$0", "type": "variable"},
      {"act": "astNode", "value": "$2", "type": "assign", "children": "$2"}
    ]
    },
    {"A": ["id", "=", "EXP",
      {"act": "astNode", "value": "$0", "type": "variable"},
      {"act": "astNode", "value": "$1", "type": "assign", "children": "$1"}
    ]
    },
    {"ACLIST": ["RANGES",
      {"act": "astNode", "type": "access", "value": "indices", "children": "all"}
    ]},
    {"RANGES": ["LINDICES"]},
    {"LINDICES": ["LINDICES", "LINDEX"]},
    {"LINDICES": "LINDEX"},
    {"LINDEX": ["LIST"]},
    {"EXP": ["LIST"]},
    {"LIST": ["[", "LITEMS", "]",
      {"act": "astNode", "type": "list", "value": "items", "children": "all"},
      {"act": "astNode", "type": "start", "value": "item", "child": "$0"}
    ]},
    {"LITEMS": ["LITEMS", ",", "LITEM"]},
    {"LITEMS": "LITEM"},
    {"LITEMS": "empty"},
    {"LITEM": "EXP"},
    {"LITEM": ["RANGE"]},
    {"RANGE": ["AE", "rankdel", "AE",
      {"act": "astNode", "type": "range", "value": "range", "children": "$1"}
    ]},
    {"RANGE": ["AE", "rankdel",
      {"act": "astNode", "type": "range", "value": "rangeStart", "children": "$0"}
    ]},
    {"RANGE": ["rankdel", "AE",
      {"act": "astNode", "type": "range", "value": "rangeEnd", "children": "$0"}
    ]},

    {"EXP": ["LAMBDA"]},
    {"LAMBDA": ["lambda", "LHEADER", "=>", "S",
      {"act": "astNode", "type": "lambda", "value": "$0", "children": "$1"}
    ]},
    {"LHEADER": ["(", "PARGS", ")",
      {"act": "astNode", "type": "params", "value": "items", "children": "all"}
    ]},
    {"PARGS": ["PARGS", ",", "PARG"]},
    {"PARGS": "PARG"},
    {"PARGS": "empty"},
    {"PARG": ["id",
      {"act": "astNode", "type": "variable", "value": "$0"}
    ]},

    {"CALL": ["id", "CALLEE",
      {"act": "astNode", "type": "call", "value": "$0", "children": "all"}
    ]},
    {"ARGS": ["ARGS", ",", "ARG"]},
    {"ARGS": "ARG"},
    {"ARGS": "empty"},
    {"ARG": "EXP"},

    {"CALLEE": ["CALLERS"]},
    {"CALLERS": ["CALLERS", "CALLER"]},
    {"CALLERS": "CALLER"},
    {"CALLER": ["(", "ARGS", ")",
      {"act": "astNode", "type": "args", "value": "items", "children": "all"},
      {"act": "astNode", "type": "start", "value": "item", "child": "$0"}
    ]},

    {"EXP": "B"},
    {"B": ["B","->","DISJ", {"act": "astNode", "value": "$1", "type": "boolop", "children": "$1"}]},
    {"B": "DISJ"},
    {"DISJ": ["DISJ","||","CONJ",  {"act": "astNode", "value": "$1", "type": "boolop", "children": "$1"}]},
    {"DISJ": "CONJ"},
    {"CONJ": ["CONJ","&&","E", {"act": "astNode", "value": "$1", "type": "boolop", "children": "$1"}]},
    {"CONJ": "E"},

    {"E": ["AE","RELOP","AE", {"act": "astNode", "value": "$1_0", "type": "relop", "children": "$1"}]},
    {"RELOP": "<"},{"RELOP": "<="},{"RELOP": ">"},{"RELOP": ">="},{"RELOP": "=="},{"RELOP": "<>"},

    {"E": "AE"},
    {"AE": ["AE", "+", "T", {"act": "astNode", "value": "$1", "type": "operator", "children": "$1"}]},
    {"AE": ["AE", "-", "T", {"act": "astNode", "value": "$1", "type": "operator", "children": "$1"}]},
    {"AE": ["T"]},
    {"T": ["T", "*", "F", {"act": "astNode", "value": "$1", "type": "operator", "children": "$1"}]},
    {"T": ["T", "/", "F", {"act": "astNode", "value": "$1", "type": "operator", "children": "$1"}]},
    {"T": ["F"]},
    {"F": ["UE", "^", "F", {"act": "astNode", "value": "$1", "type": "operator", "children": "$1"}]},
    {"F": ["UE"]},
    {"UE": ["um", "UE", {"act": "astNode", "value": "$0", "children": "$0", "type": "unaryop"}]},
    {"UE": ["up", "UE", {"act": "astNode", "value": "$0", "children": "$0", "type": "unaryop"}]},
    {"UE": ["PE"]},
    {"PE": ["id", "ACLIST",
      {"act": "astNode", "value": "$0", "type": "variable"},
      {"act": "astNode", "type": "access", "value": "list", "children": "$1"}
    ]},
    {"PE": ["id", {"act": "astNode", "value": "$0", "type": "variable"}]},
    {"PE": ["ch", {"act": "astNode", "value": "$0", "type": "char"}]},
    {"PE": ["str", {"act": "astNode", "value": "$0", "type": "string"}]},
    {"PE": ["signedNum", {"act": "astNode", "value": "$0", "type": "number"}]},
    {"PE": ["realNum", {"act": "astNode", "value": "$0", "type": "number"}]},
    {"PE": ["true", {"act": "astNode", "value": "$0", "type": "boolean"}]},
    {"PE": ["false", {"act": "astNode", "value": "$0", "type": "boolean"}]},
    {"PE": ["(", "B",")"]},
    {"PE": "CALL"},
    {"PE": ["not", "(", "B", ")", {"act": "astNode", "value": "$0", "type": "unaryop", "children": "$0"}]}
  ],

  "start": "P",

  "meta": {
    "commentLine": "//",
    "mlCommentStart": "/*",
    "mlCommentEnd": "*/",
    "id": "id",
    "aliases": {
      "-": "um",
      "+": "up"
    },
    "scopes": [
      {"start": "{", "end": "}", "body": "SL"},
      {"start": "[", "end": "]", "body": "LITEMS"},
      {"start": ["id", "["], "body": "RANGES"},
      {"start": ["id", "("], "body": "CALLEE"},
      {"start": ["id", "("], "end": ")", "body": "ARGS"},
      {"start": ["CALLERS", "("], "end": ")", "body": "ARGS"},
      {"start": ["lambda", "("], "end": ")", "body": "PARGS"}
    ],
    "operands": ["id", "signedNum", "realNum", "ch", "str", "true", "false"],
    "operators": [
      "=",
      "+",
      "-",
      "*",
      "/",
      "%",
      "^"
    ]
  }
}