module Dict {
    a = 0xff;
    { a = a - 200; b = 34; { f = lambda(x) => { x * x; }; a = 10; e = 123; } }

    l = [1, 2, 3];
    l += a; //255 as inner block define new context.
    b = 0b01P-2;

    lf = lambda(n) => lambda() => [1..n];;;

    lfi = lambda(n) => if(n < 10) n + 1; else [1..n];;

    eq = lambda(x, y) => x == y;;

    l2 = [gen [1] for _ in lf(10)() end];
    l3 = [gen [1] for _ in lfi(lfi(lfi(lfi(7)))) end]; //4 times calls.

    E = [gen [gen x == y for y in [1..4] end] for x in [1..4] end];

    b1 = E is list;
    b2 = 0 < 1;
    if(lf is function){ //preserve exp value
        cc = 123;
        b2 = lf(4)();
    }
}